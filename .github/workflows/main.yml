name: Build and Analyze

on:
  push:
    branches:
      - main
    tags:
      - '*'  # Runs on any tag push (e.g., v1.0.0)

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full commit history is available

      - name: Determine Version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git rev-parse --short HEAD)  # Use commit SHA if no tag
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "SonarQube Version: $VERSION"

      - name: Get Last Version from SonarQube
        id: get_last_version
        run: |
          LAST_VERSION=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: \
            "${{ secrets.SONAR_HOST_URL }}/api/project_analyses/search?project=${{ secrets.SONAR_PROJECT_KEY }}" \
            | jq -r '.analyses[0].revision')
          echo "LAST_VERSION=$LAST_VERSION" >> $GITHUB_ENV
          echo "Previous SonarQube Version: $LAST_VERSION"

      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectVersion=${{ env.VERSION }}
            -Dsonar.scanner.metadataFilePath=${{ github.workspace }}/.scannerwork/report-task.txt
            -Dsonar.previousAnalysisVersion=${{ env.LAST_VERSION }}

      - name: Quality Gate Check
        uses: SonarSource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
